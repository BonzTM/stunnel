name: Build Image and Push
on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * SUN'

# Sets permissions of the GITHUB_TOKEN
permissions:
  packages: write
  contents: read
  security-events: write  # Required for vulnerability scanning

env:
  GHCR_REPO: ghcr.io/${{ format('{0}/{1}', github.repository_owner, 'stunnel') | lowercase }}
  DOCKERHUB_REPO: bonztm/stunnel

jobs:
  build-push-stunnel:
    runs-on: 
      - stunnel

    steps:
      - name: checkout repo content
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date --rfc-3339=date)" >> $GITHUB_OUTPUT
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create docker context
        run: |
          docker context create stunnel

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: stunnel

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          images: |
            ${{ env.GHCR_REPO }}
            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=raw,value=${{ steps.date.outputs.date }}
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.GHCR_REPO }}:sha-${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      # Generate HTML report for easier viewing
      - name: Run Trivy vulnerability scanner (HTML Report)
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.GHCR_REPO }}:sha-${{ github.sha }}
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL,HIGH,MEDIUM'
          
      # Upload HTML report as an artifact
      - name: Upload Trivy scan results as artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-results
          path: trivy-results.txt

      # Add check for critical vulnerabilities
      - name: Check for critical vulnerabilities
        if: github.event_name != 'pull_request'
        run: |
          if grep -q "CRITICAL: [1-9]" trivy-results.txt; then
            echo "::warning::Critical vulnerabilities found in the image!"
            echo "Please review the vulnerability report. The deployment will continue, but you should address these issues."
          fi

      - name: Remove docker context
        if: always()
        run: docker context rm stunnel

      - name: Update Dockerhub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_REPO }}
          readme-filepath: README.md
          short-description: ${{ github.event.repository.description }}
